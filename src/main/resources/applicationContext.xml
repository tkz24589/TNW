<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
    <!--  其中base-package为需要扫描的包（含所有子包） @Service用于标注业务层组件，@Controller用于标注控制层组件（如struts中的action）,@Repository用于标注数据访问组件，即DAO组件，而@Component泛指组件，当组件不好归类的时候，我们可以使用这个注解进行标注。    -->  
    <!-- 开启包扫描，并注册二注解 -->
    <context:annotation-config></context:annotation-config>
    <context:component-scan base-package="com.vaccum.*"></context:component-scan>
    <!-- 引入属性文件 -->
    <context:property-placeholder location="classpath:jdbc.properties"/>
    
    <!-- 配置C3Po连接池 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">
        <!-- 数据库连接相关信息 -->
        <property name="jdbcUrl" value="${jdbc.url}"></property>
        <property name="driverClass" value="${jdbc.driver}"></property>
        <property name="user" value="${jdbc.user}"></property>
        <property name="password" value="${jdbc.password}"></property>
        <!--连接池中保留的最小连接数。--> 
        <property name="minPoolSize" value="10" /> <!--连接池中保留的最大连接数。Default: 15 --> 
        <property name="maxPoolSize" value="100" /> 
        <!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 --> 
        <property name="maxIdleTime" value="1800" /> 
        <!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 --> 
        <property name="acquireIncrement" value="3" /> 
        <property name="maxStatements" value="1000" /> 
        <property name="initialPoolSize" value="10" /> 
        <!--每60秒检查所有连接池中的空闲连接。Default: 0 --> 
        <property name="idleConnectionTestPeriod" value="60" /> 
        <!--定义在从数据库获取新连接失败后重复尝试的次数。Default: 30 --> 
        <property name="acquireRetryAttempts" value="30" /> 
        <property name="breakAfterAcquireFailure" value="true" /> 
        <property name="testConnectionOnCheckout" value="false" />
    </bean>
    
    <!-- 配置Hibernate的SessionFactory -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 配置Hibernate属性 -->
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql">true</prop><!-- 是否展示SQL -->
                <prop key="hibernate.hbm2ddl.auto">update</prop><!-- 是否自动创建表结构 -->
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop>
                <prop key="hibernate.autoReconnect">true</prop> 
                <!--  <prop key=" hibernate.current_session_context_class">thread</prop>-->
            </props>
        </property>

        <!--配置hibernate映射文件的位置以及名称，可以使用通配符-->
        <property name="mappingLocations"
                  value="classpath:hbm/*.hbm.xml">
        </property>

        <!-- annonation
        <property name="packagesToScan">            
            <list>                
                <value>com.vaccum.entity</value>            
            </list>        
        </property>
        -->
    </bean>
    
    <!-- 配置事务管理器@Transactional -->
    <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <!-- 注入SessionFactory -->
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <!-- 配置事务增强 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
                <tx:method name="*" propagation="REQUIRED"/>
                <!--这里如果觉着麻烦只要最后一行*就可以了，因为他会扫描所有的函数的 -->
         </tx:attributes>
    </tx:advice>
    <aop:config>

       <aop:pointcut id="txAdvicePointcut" expression="execution(* com.vaccum.service.*.*(..))"/>

       <aop:advisor advice-ref="txAdvice" pointcut-ref="txAdvicePointcut"/>

    </aop:config>

</beans>    
